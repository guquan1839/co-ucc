#!/bin/bash
set -e

# 输入参数
libtool_file=$1        # libtool 程序路径
lo_input=$2            # 比如 compress/compresskernel.lo
shift 2                # 移除前两个参数，剩下的是编译命令

# 基础配置
out_dir="./compress/"                           # 所有输出集中到这个目录
base_name=$(basename "$lo_input" .lo)   # 不带路径的纯文件名（compresskernel）

# 输出路径
pic_dir="${out_dir}/.libs"
npic_dir="${out_dir}"

pic_filepath="${pic_dir}/${base_name}.o"
npic_filepath="${npic_dir}/${base_name}.o"
lo_filepath="${npic_dir}/${base_name}.lo"

local_pic_filepath=".libs/${base_name}.o"
local_npic_filepath="${base_name}.o"

# 创建目录
mkdir -p "$pic_dir"

echo "[DEBUG] PIC = $pic_filepath"
echo "[DEBUG] NPIC = $npic_filepath"
echo "[DEBUG] LO = $lo_filepath"

# 编译 PIC 版本
tmpcmd="$@"
if [[ "$tmpcmd" == *"amdclang"* ]]; then
  cmd="${@:0:2} -x hip -target x86_64-unknown-linux-gnu ${@:2} -fPIC -O3 -o ${pic_filepath}"
elif [[ "$tmpcmd" == *"hipcc"* ]]; then
  cmd="$@ -fPIC -o ${pic_filepath}"
else
  cmd="$@ -Xcompiler -fPIC -o ${pic_filepath}"
fi

echo "[BUILD] $cmd"
$cmd

# 编译 non-PIC 版本
if [[ "$tmpcmd" == *"amdclang"* ]]; then
  cmd="${@:0:2} -x hip -target x86_64-unknown-linux-gnu ${@:2} -O3 -o ${npic_filepath}"
else
  cmd="$@ -o ${npic_filepath}"
fi

echo "[BUILD] $cmd"
$cmd

# 写 .lo 文件
libtool_version="$(${libtool_file} --version | sed 's/^/#/g')"

{
  echo "# ${lo_filepath} - a libtool object file"
  echo "# Generated by ${libtool_version}"
  echo ""
  echo "# Please DO NOT delete this file!"
  echo "# It is necessary for linking the library."
  echo ""
  echo "# Name of the PIC object."
  echo "pic_object='${local_pic_filepath}'"
  echo ""
  echo "# Name of the non-PIC object."
  echo "non_pic_object='${local_npic_filepath}'"
} > "${lo_filepath}"

echo "[DONE] Wrote .lo file: ${lo_filepath}"
